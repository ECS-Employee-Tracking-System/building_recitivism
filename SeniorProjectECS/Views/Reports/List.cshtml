@{
    ViewBag.ContentCssNoMargin = "margin-left: 100px; margin-right:100px";
}
<div class="row">
    <img src="~/images/ecslogo.png" class="img-responsive" align="left" style="width: 165px; height: 55px" />
</div>
<link rel="stylesheet" href="~/css/legendstyling.css" />
<div class="container">
    <div class="row">
        <div class="col">

        </div>
        <div class="col">

        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-md-8"></div>
    <div class="col-6 col-md-4">.</div>
</div>
<div class="col-2 col-md-2">
    <div class='my-legend'>
        <div class='legend-title'>Color Legend</div>
        <div class='legend-scale'>
            <ul class='legend-labels'>
                <li><span style='background:#FB8072;'></span>30 Days before Expires and Required</li>
                <li><span style='background:#FFFFB3;'></span>60 Days before Expires and Required</li>
                <li><span style='background:#80B1D3;'></span>90 Days before Expires and Required</li>
            </ul>
        </div>
    </div>
</div>
<div class="col-12 col-md-10 container page-header">
    <h2>@Html.Raw(ViewBag.LoggedUser)'s @Html.Raw(ViewBag.AccessRole) Staff Management Panel</h2>
</div>
<div class="col-12 col-md-10 container">
    <!-- Button trigger modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Add or Remove Columns</h4>
                </div>
                <div class="modal-body">
                    <div id="grpChkBox">
                        <ul id="checks" class="col-2" style="list-style-type: none; display: inline-block;">
                            Individual
                            <li><input type="checkbox" class="toggle-vis" data-column="0" /> First Name</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="1" /> Last Name</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="2" /> Email</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="3" /> Date Of Hire</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="4" /> Center Name</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="5" /> Center County</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="6" /> Ceter Region</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="7" /> Position</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="8" /> PDP Goal Begining of Year on File</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="9" /> PDP Mid Year Goal on File</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="10" /> PDP End of Year Goal on File</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="11" /> GoalMet </li>
                            <li><input type="checkbox" class="toggle-vis" data-column="12" /> TA</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="13" /> Application Aproved</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="14" /> Class Completed</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="15" /> Class Paid</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="16" /> Required Hours</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="17" /> Hours Earned></li>
                            <li><input type="checkbox" class="toggle-vis" data-column="18" /> Term Date</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="19" /> Degree Abrv</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="20" /> Degree Level</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="21" /> Degree Type</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="22" /> Degree Detail</li>
                            <li><input type="checkbox" class="toggle-vis" data-column="23" /> Required Cert</li>
                        </ul>
                        <ul class="col-2" style="list-style-type: none; display: inline-block;">
                            Groups

                            <li><button type="button" id="unselectCenters" class="btn btn-default btn-danger">Unselect Centers</button></li>
                            <li><button type="button" id="unselectGoals" class="btn btn-default btn-danger">Unselect Goals</button></li>
                            <li><button type="button" id="unselectTA" class="btn btn-default btn-danger">Unselect Tuition</button></li>
                            <li><button type="button" id="unselectTraining" class="btn btn-default btn-danger">Unselect Training Hours</button></li>
                            <li><button type="button" id="unselectEdu" class="btn btn-default btn-danger">Unselect Education</button></li>
                            <li><button type="button" id="selectCenters" class="btn btn-default btn-primary">Select Centers</button></li>
                            <li><button type="button" id="selectGoals" class="btn btn-default btn-primary">Select Goals</button></li>
                            <li><button type="button" id="selectTA" class="btn btn-default btn-primary">Select Tuition</button></li>
                            <li><button type="button" id="selectTraining" class="btn btn-default btn-primary">Select Training Hours</button></li>
                            <li><button type="button" id="selectEdu" class="btn btn-default btn-primary">Select Education</button></li>
                        </ul>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <table id="StaffTable" class="table table-hover table-bordered table-condensed tablesorter">
        <thead>
            <tr>
                <th class="FirstName">First Name</th>
                <th class="LastName">LastName</th>
                <th class="Email"><i class="glyphicon glyphicon-envelope"></i>Email</th>
                <th class="DateOfHire">Date of Hire</th>
                <th class="CenterName">Center Name</th>
                <th class="CenterCounty">Center County</th>
                <th class="CenterRegion">Ceter Region</th>
                <th class="Position">Position</th>
                <th class="Goal">PDP Goal Begining of Year on File</th>
                <th class="MidYear">PDP Mid Year Goal on File</th>
                <th class="EndYear">PDP End of Year Goal on File</th>
                <th class="GoalMet">Goal Met</th>
                <th class="TA">TA<i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Is Tuition Assistance Owed"></i></th>
                <th class="AppApp">Application Aproved</th>
                <th class="ClassCompleted">Class Completed</th>
                <th class="ClassPaid">Class Paid</th>
                <th class="RequiredHours">Required Hours</th>
                <th class="HoursEarned">Hours Earned</th>
                <th class="TermDate">Term Date</th>
                <th class="DegreeAbrv">Degree Abrv</th>
                <th class="DegreeLevel">Degree Level</th>
                <th class="DegreeType">Degree Type</th>
                <th class="DegreeDetail">Degree Detail</th>
                <th class="RequiredCert">Required Cert<i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Certs Required by Position"></i></th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div AdminOnly class="container">
        <a class="btn btn-primary btn-default" @Html.ActionLink("Add New User", "Create", "StaffMember")</a> <a class="btn btn-primary btn-default" @Html.ActionLink("View Inactive Staff", "Inactive", "StaffMember")</a>
        <a class="btn btn-primary btn-default" @Html.ActionLink("Manage User Accounts", "Index", "User")</a> <a class="btn btn-primary btn-default" @Html.ActionLink("Maintenance Page", "Index", "Maintenance")</a>
    </div>
</div>

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal"> Filter Specific Columns</button>
<br />
<br />
<button class="btn-primary" onclick="exportexcel()">Export to Excel</button>

<script src="~/lib/jquery-table2excel/dist/jquery.table2excel.min.js"></script>
<script src="~/lib/moment/min/moment.min.js"></script>
<script>
    //takes the current view on the page without hidden elements and exports it to excel
    function exportexcel() {
        var $clonedTable = $("#StaffTable").clone();
        $clonedTable.find('[style*="display: none"]').remove();
        $($clonedTable).table2excel({
            name: "Table2Excel",
            filename: "ECSReport",
            fileext: ".xls"
        });
    }
    //toggles css tooltips for bootstrap
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });

    //gets the list of all available certs to create table headers and then passes them to getTable function
    function getCerts() {
        $.getJSON('/Reports/GetCertList', function (json) {
            var trCenter = '';
            var tdCenter = '';
            var modalCenter = '';
            var i = 24;
            $.each(json, function (index, cert) {
                trCenter += '<th class="' + findAndReplace(cert.CertName, " ", "_") + '">' + cert.CertName + ' Expire Date<i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Expire Date(Days Until Expire, Negative Numbers are Expired, * are required)"></i></th>';
                tdCenter += '<td id ="' + findAndReplace(cert.CertName, " ", "_") + '"></td>'
                modalCenter += '<li><input type="checkbox" class="toggle-vis" data-column="' + i + '"> ' + cert.CertName + '</li>'
                i++;
            });
            getTable(trCenter, tdCenter, modalCenter);

        });
    }
    //takes in the date of cert and the amount of time cert is valid and returns the expiration date and sets class to color which will expire
    function colorCodeDate(expDateIn, expAmount,needsColor) {
        var expDate = moment(moment(expDateIn).add(expAmount, "Months"));
        var todaysDate = moment();
        var calcDate = expDate.diff(todaysDate, 'days');
        var calcOut = '';
        if (expDateIn != null){ 
        if ((calcDate <= 30) && (needsColor==true)) { calcOut = '<span class ="thirtyDays btn-danger">' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }
        else if ((calcDate <= 60) && (needsColor == true)) { calcOut = '<span class ="sixtyDays btn-warning">' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }
        else if ((calcDate <= 90) && (needsColor == true)) { calcOut = '<span class ="ninetyDays btn-info">' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }
        else { calcOut = '<span>' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }}
        return calcOut;
    }

    //changes true or false to yes or no
    function yesNoConvert(boolvar) {
        if (boolvar) {
            return "yes";
        }
        else return "no";

    }
    function getTable(trCenter, tdCenter, modalCenter) {
        $.getJSON('/Reports/GetDashBoardLists', function (data) {
            var trHTML = '';
            var done = 0;
            $('#StaffTable thead tr').append(trCenter);
            $('#StaffTable thead tr').append("<th>Edit</th>");
            $('#checks').append(modalCenter);
            $.each(data, function (index, staff) {
                if (!staff.isInactive) {
                    Position = '';
                    EducationAbrv = '';
                    EducationLevel = '';
                    EducationType = '';
                    EducationDetail = '';
                    PRCertName = '';
                    PRCertExpireAmount = '';
                    PRCertCompletionDate = '';
                    CertName = '';
                    CertExpireAmount = '';
                    CertCompletionDate = '';
                    CertInProgress = '';
                    reqCertsArray = [];
                    $.each(staff.positions, function (index, pos) {
                        Position += pos.positionTitle + ', '; $.each(pos.requiredCerts, function (index, posReq) {
                            reqCertsArray.push(posReq.certName);
                            PRCertName += posReq.certName + ', ';
                            PRCertExpireAmount += posReq.certExpireAmount + ', '; PRCertCompletionDate += posReq.certCompletionDate + ', ';
                        });
                    });
                    $.each(staff.education, function (index, edu) {
                        EducationAbrv += edu.degreeAbrv + ', '; EducationLevel += edu.degreeLevel + ', '; EducationType += edu.degreeType + ', ';
                        EducationDetail += edu.degreeDetail + ', ';
                    });
                    $('#StaffTable tbody').append(
                        '<tr id="' + staff.staffMemberID + '"><td>'
                        + '<a href="/StaffMember/Details/' + staff.staffMemberID + '">' + staff.firstName + '</a></td><td>'
                        + staff.lastName + '</td><td>'
                        + staff.email + '</td><td>'
                        + moment(staff.dateOfHire).format("M/D/YYYY") + '</td><td>'
                        + staff.center.name + '</td><td>'
                        + staff.center.county + '</td><td>'
                        + staff.center.region + '</td><td>'
                        + Position + '</td><td>'
                        + yesNoConvert(staff.goal) + '</td><td>'
                        + yesNoConvert(staff.midYear) + '</td><td>'
                        + yesNoConvert(staff.endYear) + '</td><td>'
                        + yesNoConvert(staff.goalMet) + '</td><td>'
                        + yesNoConvert(staff.tAndAApp) + '</td><td>'
                        + yesNoConvert(staff.appApp) + '</td><td>'
                        + yesNoConvert(staff.classCompleted) + '</td><td>'
                        + yesNoConvert(staff.classPaid) + '</td><td>'
                        + staff.requiredHours + '</td><td>'
                        + staff.hoursEarned + '</td><td>'
                        + moment(staff.termDate).format("M/D/YYYY") + '</td><td>'
                        + EducationAbrv + '</td><td>'
                        + EducationLevel + '</td><td>'
                        + EducationType + '</td><td>'
                        + EducationDetail + '</td><td>'
                        + PRCertName + '</td>'
                        + tdCenter
                        + '<td adminonly=""><a href="/StaffMember/Edit/' + staff.staffMemberID + '">Edit</a></td>'
                        + '</tr >').trigger("update");
                    //add all the members certs to the table color code if required for expiration
                    $.each(staff.completedCerts, function (index, certs) {
                        var needsColor='';
                        if ($.inArray(certs.cert.certName, reqCertsArray) != -1) {
                            needsColor = true;
                            $("#" + (staff.staffMemberID) + "> #" + (findAndReplace(certs.cert.certName, " ", "_"))).append(colorCodeDate(certs.dateCompleted, certs.cert.certExpireAmount,needsColor ));
                        }
                        else {
                            needsColor = false;
                            $("#" + (staff.staffMemberID) + "> #" + (findAndReplace(certs.cert.certName, " ", "_"))).append(colorCodeDate(certs.dateCompleted, certs.cert.certExpireAmount, needsColor));
                        }
                        CertInProgress += certs.certInProgress + ', '; CertName += certs.cert.certName + ', '; CertExpireAmount += certs.cert.certExpireAmount + ', ';
                        if (certs.certInProgress)
                        {
                            $("#" + (staff.staffMemberID) + "> #" + (findAndReplace(certs.cert.certName, " ", "_"))).append('<i class="glyphicon glyphicon-refresh" style="color:green" data-toggle="tooltip" title="Certification is in Progress">I</i>');
                        }
                        done++;
                    });
                    //append * to all requeried Certs
                    $.each(reqCertsArray, function (index, reqCA) {
                        $("#" + (staff.staffMemberID) + "> #" + (findAndReplace(reqCA, " ", "_"))).append('<i class="glyphicon glyphicon-asterisk" data-toggle="tooltip" title="Certification required by Position held">R</i>');
                    });
                }
            });
            //build data table after js is done
            buildTable(done);
        });
    }

    //datatable section
    function buildTable(data) {
        var table = $("#StaffTable").DataTable({
            "order": [[1, "asc"]], "pageLength": 15, columnDefs: [
                { targets: [7,8,9,10,11,12,13,14,15,16,17,18], visible: false },
            ]});
        $('.toggle-vis:checkbox').on('click', function () {
            // Get the column API object
            var column = table.column($(this).attr('data-column'));

            // Toggle the visibility
            column.visible(!column.visible());
        });

        $("#unselectCenters").click(function () {
            table.columns([4, 5, 6]).visible(false, false);
            table.columns.adjust().draw(false); // adjust column sizing and redraw
        });
        $("#selectCenters").click(function () {
            table.columns([4, 5, 6]).visible(true, true);
            table.columns.adjust().draw(true); // adjust column sizing and redraw
        });

        $("#unselectGoals").click(function () {
            table.columns([ 8, 9, 10, 11]).visible(false, false);
            table.columns.adjust().draw(false); // adjust column sizing and redraw
        });
        $("#selectGoals").click(function () {
            table.columns([ 8, 9,10, 11]).visible(true, true);
            table.columns.adjust().draw(true); // adjust column sizing and redraw
        });

        $("#unselectTA").click(function () {
            table.columns([12, 13, 14, 15,18]).visible(false, false);
            table.columns.adjust().draw(false); // adjust column sizing and redraw
        });
        $("#selectTA").click(function () {
            table.columns([12, 13, 14, 15,18]).visible(true, true);
            table.columns.adjust().draw(true); // adjust column sizing and redraw
        });

        $("#unselectTraining").click(function () {
            table.columns([16, 17]).visible(false, false);
            table.columns.adjust().draw(false); // adjust column sizing and redraw
        });
        $("#selectTraining").click(function () {
            table.columns([16, 17]).visible(true, true);
            table.columns.adjust().draw(true); // adjust column sizing and redraw
        });

        $("#unselectEdu").click(function () {
            table.columns([19, 20, 21, 22]).visible(false, false);
            table.columns.adjust().draw(false); // adjust column sizing and redraw
        });
        $("#selectEdu").click(function () {
            table.columns([ 19, 20, 21, 22]).visible(true, true);
            table.columns.adjust().draw(true); // adjust column sizing and redraw
        });
    };

    //start first function to lead to callbacks getCerts=>getTable=>buildTable
    getCerts();

</script>
