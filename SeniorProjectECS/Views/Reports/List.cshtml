<script src="~/lib/jquery-table2excel/dist/jquery.table2excel.min.js"></script>
<script src="~/lib/moment/min/moment.min.js"></script>

<script>
    function exportexcel() {
    var $clonedTable = $("#StaffTable").clone();
    $clonedTable.find('[style*="display: none"]').remove();
    console.log($clonedTable.html());
       $($clonedTable).table2excel({
            name: "Table2Excel",
            filename: "ECSReport",
            fileext: ".xls"
        });
    }
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });

    //gets the list of all available certs to create table headers and then passes them to getTable function
    function getCerts() {
        $.getJSON('/Reports/GetCertList', function (json) {
            var trCenter = '';
            var tdCenter = '';
            var chkCenter = '';
            $.each(json, function (index, cert) {
                trCenter += '<th class="'+ findAndReplace(cert.CertName, " ", "_") +'">' + cert.CertName + ' Expire Date</th>';
                tdCenter += '<td id ="' + findAndReplace(cert.CertName, " ", "_") + '"></td>'
                chkCenter += '<li><input type="checkbox" name="' + findAndReplace(cert.CertName, " ", "_") + '" />' + cert.CertName+'</li>'
            });
            getTable(trCenter, tdCenter, chkCenter);

        });
    }
    //takes in the date of cert and the amount of time cert is valid and returns the expiration date and sets class to color which will expire
    function colorCodeDate(expDateIn, expAmount) {
        var expDate = moment(moment(expDateIn).add(expAmount, "Months"));
        var todaysDate = moment();
        var calcDate = expDate.diff(todaysDate, 'days');
        var calcOut = '';
        if (calcDate <= 30) { calcOut = '<span class ="thirtyDays btn-danger">' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }
        else if (calcDate <= 60) { calcOut = '<span class ="sixtyDays btn-warning">' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }
        else if (calcDate <= 90) { calcOut = '<span class ="ninetyDays btn-info">' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }
        else { calcOut = '<span>' + moment(expDate).format("M/D/YYYY") + '(' + calcDate + ')<span>'; }
        return calcOut;
    }

    //changes true or false to yes or no
    function yesNoConvert(boolvar) {
        if (boolvar) {
            return "yes";
        }
        else return "no";

    }
    function getTable(trCenter, tdCenter,chkCenter) {
        $.getJSON('/Reports/GetDashBoardLists', function (data) {
            var trHTML = '';
            //var thead = '<th>Degree Abrv</th><th>Degree Level</th><th>Degree Type</th><th>Degree Detail</th><th>Required Cert</th>' + trCenter;
            $('#StaffTable thead tr').append(trCenter);
            $('#grpChkBox ul').append(chkCenter);
            $("#StaffTable").tablesorter();
            //turns off and on colums on table
            $(function () {
                var $chk = $("#grpChkBox input:checkbox");
                var $tbl = $("#StaffTable");
                var $tblhead = $("#StaffTable th");
                $chk.prop('checked', true);
            
                $chk.click(function () {
                    var colToHide = $tblhead.filter("." + $(this).attr("name"));
                    var index = $(colToHide).index();
                    $tbl.find('tr :nth-child(' + (index + 1) + ')').toggle();
                });
            });
            $.each(data, function (index, staff) {
                if (!staff.isInactive) {
                    Position = '';
                    EducationAbrv = '';
                    EducationLevel = '';
                    EducationType = '';
                    EducationDetail = '';
                    PRCertName = '';
                    PRCertExpireAmount = '';
                    PRCertCompletionDate = '';
                    CertName = '';
                    CertExpireAmount = '';
                    CertCompletionDate = '';
                    CertInProgress = '';
                    $.each(staff.positions, function (index, pos) {
                        Position += pos.positionTitle + ', '; $.each(pos.requiredCerts, function (index, posReq) {
                            PRCertName += posReq.certName + ', ';
                            PRCertExpireAmount += posReq.certExpireAmount + ', '; PRCertCompletionDate += posReq.certCompletionDate + ', ';
                        });
                    });
                    $.each(staff.education, function (index, edu) {
                        EducationAbrv += edu.degreeAbrv + ', '; EducationLevel += edu.degreeLevel + ', '; EducationType += edu.degreeType + ', ';
                        EducationDetail += edu.degreeDetail + ', ';
                    });
                    $('#StaffTable tbody').append(
                        '<tr id="' + staff.staffMemberID + '"><td>'
                        + staff.firstName + '</td><td>'
                        + staff.lastName + '</td><td>'
                        + staff.email + '</td><td>'
                        + moment(staff.dateOfHire).format("M/D/YYYY") + '</td><td>'
                        + staff.center.name + '</td><td>'
                        + staff.center.county + '</td><td>'
                        + staff.center.region + '</td><td>'
                        + Position + '</td><td>'
                        + yesNoConvert(staff.goal) + '</td><td>'
                        + yesNoConvert(staff.midYear) + '</td><td>'
                        + yesNoConvert(staff.endYear) + '</td><td>'
                        + yesNoConvert(staff.goalMet) + '</td><td>'
                        + yesNoConvert(staff.tAndAApp) + '</td><td>'
                        + yesNoConvert(staff.classCompleted) + '</td><td>'
                        + yesNoConvert(staff.classPaid) + '</td><td>'
                        + staff.requiredHours + '</td><td>'
                        + staff.hoursEarned + '</td><td>'
                        + moment(staff.termDate).format("M/D/YYYY") + '</td><td>'
                        + EducationAbrv + '</td><td>'
                        + EducationLevel + '</td><td>'
                        + EducationType + '</td><td>'
                        + EducationDetail + '</td><td>'
                        + PRCertName + '</td>'
                        + tdCenter
                        + '</tr >').trigger("update");
                    $.each(staff.completedCerts, function (index, certs) {
                        $("#" + (staff.staffMemberID) + "> #" + (findAndReplace(certs.cert.certName, " ", "_"))).append(colorCodeDate(certs.dateCompleted, certs.cert.certExpireAmount));
                        CertInProgress += certs.certInProgress + ', '; CertName += certs.cert.certName + ', '; CertExpireAmount += certs.cert.certExpireAmount + ', ';
                    });
                }
            });
        });
    }
    getCerts();
  
</script>
@{
    ViewBag.ContentCssNoMargin = "margin-left: 100px; margin-right:100px";
}
<div class="tooltip">
    Hover over me
    <span class="tooltiptext">Tooltip text</span>
</div>
<div class="row">
    <img src="~/images/ecslogo.png" class="img-responsive" align="left" style="width: 165px; height: 55px" />
</div>
<link rel="stylesheet" href="~/css/legendstyling.css" />
<div class="container">
    <div class="row">
        <div class="col">

        </div>
        <div class="col">

        </div>
    </div>
</div>
<div class="row">
    <div class="col-12 col-md-8"></div>
    <div class="col-6 col-md-4">.</div>
</div>
<div class="col-2 col-md-2">
    <div class='my-legend'>
        <div class='legend-title'>Color Legend</div>
        <div class='legend-scale'>
            <ul class='legend-labels'>
                <li><span style='background:#FB8072;'></span>30 Days before CDA Expires</li>
                <li><span style='background:#FFFFB3;'></span>60 Days before CDA Expires</li>
                <li><span style='background:#80B1D3;'></span>90 Days before CDA Expires</li>
            </ul>
        </div>
    </div>
</div>
<div class="col-12 col-md-10 container page-header">
    <h2>@Html.Raw(ViewBag.LoggedUser)'s @Html.Raw(ViewBag.AccessRole) Staff Management Panel</h2>
</div>

<div class="col-12 col-md-10 container">
    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
        Filter Columns
    </button>

    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Add or Remove Columns</h4>
                </div>
                <div class="modal-body">
                    <div id="grpChkBox">
                        <script>
                        //unchecks all checkboxes
                         $(document).on("click", "#resetChecks", function() {
                            $('input[type=checkbox]').each(function() 
                            { 
                             this.click(); 
                            }); 
                        });
                        //checks all checkboxes
                        $(document).on("click", "#setChecks", function() {
                            $('input[type=checkbox]').each(function() 
                            { 
                             this.click(); 
                            }); 
                        });
                        </script>
                        <ul>
                            <li><input type="checkbox" name="LastName" /> Last Name</li>
                            <li><input type="checkbox" name="Email" /> Email</li>
                            <li><input type="checkbox" name="DateOfHire" />Date Of Hire</li>
                            <li><input type="checkbox" name="CenterName" /> Center Name</li>
                            <li><input type="checkbox" name="CenterCounty" /> Center County</li>
                            <li><input type="checkbox" name="CenterRegion" /> Center Region</li>
                            <li><input type="checkbox" name="Position" /> Position</li>
                            <li><input type="checkbox" name="Goal" /> Goal</li>
                            <li><input type="checkbox" name="MidYear" /> MidYear</li>
                            <li><input type="checkbox" name="EndYear" /> EndYear</li>
                            <li><input type="checkbox" name="GoalMet" /> GoalMet</li>
                            <li><input type="checkbox" name="TA" /> TA</li>
                            <li><input type="checkbox" name="ClassCompleted" />Class Completed</li>
                            <li><input type="checkbox" name="ClassPaid" /> Class Paid</li>
                            <li><input type="checkbox" name="RequiredHours" /> Required Hours</li>
                            <li><input type="checkbox" name="HoursEarned" /> Hours Earned</li>
                            <li><input type="checkbox" name="TermDate" /> TermDate</li>
                            <li><input type="checkbox" name="DegreeAbrv" /> Degree Abreviation</li>
                            <li><input type="checkbox" name="DegreeLevel" /> DegreeLevel</li>
                            <li><input type="checkbox" name="DegreeType" /> DegreeType</li>
                            <li><input type="checkbox" name="DegreeDetail" /> DegreeDetail</li>
                            <li><input type="checkbox" name="RequiredCert" /> Required Certifications</li>
                        </ul>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="resetChecks" class="btn btn-default btn-primary">Uncheck all</button>
                    <button type="button" id="setChecks" class="btn btn-default btn-primary">Check all</button>
                    <button type="button" class="btn btn-default btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <table id="StaffTable" class="table table-hover table-bordered table-condensed tablesorter">
        <thead>
            <tr>
                <th class="FirstName">First Name</th>
                <th class="LastName">LastName</th>
                <th class="Email"><i class="glyphicon glyphicon-envelope"></i>Email</th>
                <th class="DateOfHire">Date of Hire</th>
                <th class="CenterName">Center Name</th>
                <th class="CenterCounty">Center County</th>
                <th class="CenterRegion">Ceter Region</th>
                <th class="Position">Position</th>
                <th class="Goal">Goal</th>
                <th class="MidYear">Mid Year</th>
                <th class="EndYear">End Year</th>
                <th class="GoalMet">Goal Met</th>
                <th class="TA">TA<i class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Is Tuition Assistance Owed"></i></th>
                <th class ="ClassCompleted">Class Completed</th>
                <th class="ClassPaid">Class Paid</th>
                <th class="RequiredHours">Required Hours</th>
                <th class="HoursEarned">Hours Earned</th>
                <th class="TermDate">Term Date</th>
                <th class="DegreeAbrv">Degree Abrv</th>
                <th class="DegreeLevel">Degree Level</th>
                <th class="DegreeType">Degree Type</th>
                <th class="DegreeDetail">Degree Detail</th>
                <th class="RequiredCert">Required Cert</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div AdminOnly class="container">
        <a class="btn btn-primary btn-default" @Html.ActionLink("Add New User", "Create", "StaffMember")</a> <a class="btn btn-primary btn-default" @Html.ActionLink("View Inactive Staff", "Inactive", "StaffMember")</a>
        <a class="btn btn-primary btn-default" @Html.ActionLink("Manage User Accounts", "Index", "User")</a> <a class="btn btn-primary btn-default" @Html.ActionLink("Maintenance Page", "Index", "Maintenance")</a>
    </div>
</div>
<button class="btn-primary" onclick="exportexcel()">Export to Excel</button>

